import { Sequelize, sequelize } from '../services/dbService';

const Model = Sequelize.Model;
class Area extends Model { }
Area.init({
	// attributes
	Id: {
		type: Sequelize.BIGINT,
		primaryKey: true,
		allowNull: false
	},
	Type: Sequelize.INTEGER,
	Code: Sequelize.TEXT(256),
	Name: Sequelize.TEXT(256),
	Note: Sequelize.TEXT,
	URLId: Sequelize.BIGINT,
	Landmark: Sequelize.TEXT,
	Longitude: Sequelize.FLOAT(53),
	Latitude: Sequelize.FLOAT(53),
	PostalCode: Sequelize.TEXT,
	UrlInfo: Sequelize.TEXT,
	Introduction: Sequelize.TEXT,
	ImageInfo: Sequelize.TEXT,
	FacilityInfo: Sequelize.TEXT,
	DisplayInfo: Sequelize.TEXT,
	FeaturedInfo: Sequelize.TEXT,
	ContactInfo: Sequelize.TEXT,
	NeighbourInfo: Sequelize.TEXT,
	Info: Sequelize.TEXT,
	Keywords: Sequelize.TEXT,
	IsPrgStatus: Sequelize.INTEGER,
	IsPrgPartComp: Sequelize.TEXT,
	IsPrgCreatedDate: Sequelize.DATE,
	IsPrgUpdatedDate: Sequelize.DATE,
	IsPrgCreatedUserId: Sequelize.BIGINT,
	IsPrgUpdatedUserId: Sequelize.BIGINT,
	IsPrgUnsignKeywords: Sequelize.TEXT,
	IsPrgLanguageInfo: Sequelize.TEXT,
	IsPrgHistoryInfo: Sequelize.TEXT,
	CompId: Sequelize.BIGINT,
	PersonId: Sequelize.BIGINT,
	AgentId: Sequelize.BIGINT,
	BaseId: Sequelize.BIGINT,
	Address: Sequelize.TEXT,
	Featured: Sequelize.INTEGER,
	RootId: Sequelize.BIGINT,
	PhoneInfo: Sequelize.STRING,
	FaxInfo: Sequelize.STRING,
	IsPickupPoint: Sequelize.INTEGER,
	IsDropOffPoint: Sequelize.INTEGER,
	IsRestPoint: Sequelize.INTEGER,
	SubTypeId: Sequelize.BIGINT,
	Priority: Sequelize.INTEGER,
	BoardingTimeInfo: Sequelize.STRING,
	XMigrate: Sequelize.INTEGER,
	XMigrateDate: Sequelize.DATE,
	XMigrateKey: Sequelize.INTEGER,
	IsPrgVersion: { // ??????????
		type: 'TIMESTAMP',
		defaultValue: Sequelize.literal('CURRENT_TIMESTAMP'),
		allowNull: false
	},
	CountryId: Sequelize.BIGINT,
	StateId: Sequelize.BIGINT,
	CityId: Sequelize.BIGINT,
	DistrictId: Sequelize.BIGINT,
	QuarterId: Sequelize.BIGINT,
	GroupId: Sequelize.BIGINT,
	TripId: Sequelize.BIGINT,
	XMigrateType: Sequelize.INTEGER,
	Deltatime: Sequelize.INTEGER,
	Suggestion: Sequelize.TEXT(300),
	EnglishName: Sequelize.TEXT(256),
	EnglishAddress: Sequelize.TEXT(500),
	EnglishSuggestion: Sequelize.TEXT(500),
	EnglishIntroduction: Sequelize.TEXT,
	LinkSearchInfo: Sequelize.STRING(256),
	IsSearchOnFE: Sequelize.TINYINT,
	ImagesUrl: Sequelize.STRING(1024),
	LinkWithGeneralPoint: Sequelize.INTEGER,
	Status: Sequelize.TINYINT,
	VerifiedDate: Sequelize.DATE,
	VerifiedUser: Sequelize.STRING(56),
	DuplicateConfirmedUser: Sequelize.STRING(56),
	DuplicateConfirmedDate: Sequelize.DATE,
	ReportedUser: Sequelize.STRING(56),
	ReportedDate: Sequelize.DATE,
	DuplicatedParentId: Sequelize.INTEGER,
	AddressSignature: Sequelize.STRING(256),
}, {
		// options
		sequelize,
		modelName: 'Area',
		freezeTableName: true,
		timestamps: false
	});

export default Area;